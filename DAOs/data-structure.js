class Models{

   
    static address=[
            { field: 'shop', label: 'Loja', value: 'Padaria Real' },
            { field: 'house_number', label: 'Número', value: '2650' },
            { field: 'road', label: 'Rua', value: 'Avenida Engenheiro Carlos Reinaldo Mendes' },
            { field: 'neighbourhood', label: 'Bairro', value: 'Jardim Bela Vista' },
            { field: 'suburb', label: 'Subúrbio', value: 'Jardim Jockey Club' },
            { field: 'city_district', label: 'Distrito da Cidade', value: 'Sorocaba' },
            { field: 'city', label: 'Cidade', value: 'Sorocaba' },
            { field: 'municipality', label: 'Município', value: 'Região Imediata de Sorocaba' },
            { field: 'county', label: 'Condado', value: 'Região Metropolitana de Sorocaba' },
            { field: 'state_district', label: 'Distrito do Estado', value: 'Região Geográfica Intermediária de Sorocaba' },
            { field: 'state', label: 'Estado', value: 'São Paulo' },
            { field: 'ISO3166-2-lvl4', label: 'ISO3166-2 Nível 4', value: 'BR-SP' },
            { field: 'region', label: 'Região', value: 'Região Sudeste' },
            { field: 'postcode', label: 'Código Postal', value: '18013-280' },
            { field: 'country', label: 'País', value: 'Brasil' },
            { field: 'country_code', label: 'Código do País', value: 'br' }
        ]
        
    

    /* 
    This code will transform each key-value pair from the original object into an object with field, label, and value keys, where the label is generated by converting underscores to spaces and capitalizing the first letter of each word. here is the updated code with Portuguese labels for each field:
    */
    static transformObjectToArray(obj, labels) {
        const result = [];
    
       /*  const labelsInPortuguese = {
            "shop": "Loja",
            "house_number": "Número",
            "road": "Rua",
            "neighbourhood": "Bairro",
            "suburb": "Subúrbio",
            "city_district": "Distrito da Cidade",
            "city": "Cidade",
            "municipality": "Município",
            "county": "Condado",
            "state_district": "Distrito do Estado",
            "state": "Estado",
            "ISO3166-2-lvl4": "ISO3166-2 Nível 4",
            "region": "Região",
            "postcode": "Código Postal",
            "country": "País",
            "country_code": "Código do País"
        };
     */
        for (const key in obj) {
            if (obj.hasOwnProperty(key)) {
                result.push({
                    field: key,
                    label: labels[key] || key,
                    value: obj[key]
                });
            }
        }
    
        return result;
    }
    
}



async function translateLabel(text, targetLanguage) {
    const url = 'https://translate.googleapis.com/translate_a/single?client=gtx&sl=auto&tl=' + targetLanguage + '&dt=t&q=' + encodeURI(text);
    try {
        const response = await axios.get(url);
        if (response.data && response.data.length > 0) {
            return response.data[0][0][0];
        } else {
            throw new Error('Translation failed');
        }
    } catch (error) {
        console.error('Error translating label:', error);
        return text; // Return original text if there's an error
    }
}

async function transformObjectToArray(obj, langCode = null) {
    const result = [];

    for (const key in obj) {
        if (obj.hasOwnProperty(key)) {
            let translatedLabel = key;
            if (langCode) {
                translatedLabel = await translateLabel(key, langCode);
            }
            result.push({
                field: key,
                label: translatedLabel,
                value: obj[key]
            });
        }
    }

    return result;
}

// Example usage:
const nestedObject = {
    "shop": "Padaria Real",
    "house_number": "2650",
    "road": "Avenida Engenheiro Carlos Reinaldo Mendes",
    "neighbourhood": "Jardim Bela Vista",
    "suburb": "Jardim Jockey Club",
    "city_district": "Sorocaba",
    "city": "Sorocaba",
    "municipality": "Região Imediata de Sorocaba",
    "county": "Região Metropolitana de Sorocaba",
    "state_district": "Região Geográfica Intermediária de Sorocaba",
    "state": "São Paulo",
    "ISO3166-2-lvl4": "BR-SP",
    "region": "Região Sudeste",
    "postcode": "18013-280",
    "country": "Brasil",
    "country_code": "br"
};

transformObjectToArray(nestedObject, 'pt').then(transformedArray => {
    console.log(transformedArray);
}).catch(error => {
    console.error('Error transforming object:', error);
});
